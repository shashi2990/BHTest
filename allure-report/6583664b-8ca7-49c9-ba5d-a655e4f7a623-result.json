{"name": "test_find_center_functionality", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e3793d23591bf83db8e946b7c1feb662\")>\n\n    def test_find_center_functionality(setup):\n        driver = setup\n        home_page = HomePage(driver)\n    \n        # Navigate to Find Center\n        home_page.close_welcome_banner()\n        home_page.find_center()\n    \n        web_url = driver.current_url\n        param_url = \"child-care-locator\"\n        if param_url in web_url:\n            print(\"Parameter is correctly applied in the URL\")\n        else:\n            print(\"Parameter is missing or incorrect\")\n        log.logger.info(\"URL parameter is correctly applied.\")\n    \n        # Search for centers\n        find_center_page = FindCenterPage(driver)\n        find_center_page.search_bar_on_centerpage()\n        find_center_page.enter_key_on_searchBar()\n    \n        # Validate search results count\n        find_center_page.final_count()\n        total_count = find_center_page.final_count()\n>       find_center_page.get_all_counts()\n\nTestCases\\test_BH.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\findCenter_page.py:44: in get_all_counts\n    all_elements = self.get_all_elements(By.XPATH, configData.XPATH[\"get_All_Counts\"])\nPages\\basePage.py:58: in get_all_elements\n    elements = self.wait.until(EC.presence_of_all_elements_located((by, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e3793d23591bf83db8e946b7c1feb662\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x00000258DF5F94E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Study\\BDD\\.venv1\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "bfc7e06c-435a-4c02-bb3e-ca2403dede1a-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "8d9568de-1a5d-421c-ba02-29870a35ab9a-attachment.txt", "type": "text/plain"}], "start": 1739516667760, "stop": 1739516707651, "uuid": "496ed9a1-51c1-423d-a7bd-b4875e328b1d", "historyId": "0ac9e06adb16d33261c00642f503273e", "testCaseId": "0ac9e06adb16d33261c00642f503273e", "fullName": "TestCases.test_BH#test_find_center_functionality", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_BH"}, {"name": "host", "value": "Shashi-Laptop"}, {"name": "thread", "value": "2824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_BH"}]}