{"uid":"1cd2d95859cf24bd","name":"test_find_center_functionality","fullName":"test_BH#test_find_center_functionality","historyId":"2ce3ca604084842e2294f504f9340bfc","time":{"start":1741520974292,"stop":1741520984671,"duration":10379},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"61f8f6cf54a2859462613aac3e22dc6b\")>\n\n    def test_find_center_functionality(setup):\n        driver = setup\n        home_page = HomePage(driver)\n    \n        # Navigate to Find Center\n        home_page.close_welcome_banner()\n>       home_page.find_center()\n\ntest_BH.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\home_page.py:53: in find_center\n    self.click_element(By.XPATH, configData.XPATH[\"find_Center\"])\n..\\Pages\\basePage.py:19: in click_element\n    element = self.wait.until(EC.element_to_be_clickable((by, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"61f8f6cf54a2859462613aac3e22dc6b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000182562B1620>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Study\\BDD\\.venv1\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1741520959756,"stop":1741520974291,"duration":14535},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"61f8f6cf54a2859462613aac3e22dc6b\")>\n\n    def test_find_center_functionality(setup):\n        driver = setup\n        home_page = HomePage(driver)\n    \n        # Navigate to Find Center\n        home_page.close_welcome_banner()\n>       home_page.find_center()\n\ntest_BH.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\home_page.py:53: in find_center\n    self.click_element(By.XPATH, configData.XPATH[\"find_Center\"])\n..\\Pages\\basePage.py:19: in click_element\n    element = self.wait.until(EC.element_to_be_clickable((by, value)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"61f8f6cf54a2859462613aac3e22dc6b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000182562B1620>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\Study\\BDD\\.venv1\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException","steps":[],"attachments":[{"uid":"1504fa2e4aaab81b","name":"log","source":"1504fa2e4aaab81b.txt","type":"text/plain","size":476}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"setup::0","time":{"start":1741520984686,"stop":1741520988454,"duration":3768},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"suite","value":"test_BH"},{"name":"host","value":"Shashi-Laptop"},{"name":"thread","value":"14564-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_BH"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"1cd2d95859cf24bd.json","parameterValues":[]}